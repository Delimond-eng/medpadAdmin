{"remainingRequest":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/src/components/pages/catalog_create_page.vue?vue&type=template&id=2700acbe&scoped=true&","dependencies":[{"path":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/src/components/pages/catalog_create_page.vue","mtime":1629131289580},{"path":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/delimond/Documents/Development/Web/Weast enery/admin dashboard/weastenergy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}